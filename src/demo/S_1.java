package demo;

import java.util.ArrayList;
import java.util.Collections;

/**
 * @author lsy 2016年7月30日
 */
public class S_1 {

	public static void main(String[] args) {
		S_1 s = new S_1();
		System.out.println(s.findTheDifference("abcd", "ebdac"));
	}

	/**
	 * Given an array of integers, every element appears twice except for one.
	 * Find that single one.
	 * 
	 * Note: Your algorithm should have a linear runtime complexity. Could you
	 * implement it without using extra memory?
	 * */

	public int singleNumber(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		} else {
			for (int i = 1; i < nums.length; i++) {
				nums[0] = nums[0] ^ nums[i];
			}
			return nums[0];
		}
	}

	/**
	 * Given two strings s and t which consist of only lowercase letters.
	 * 
	 * String t is generated by random shuffling string s and then add one more
	 * letter at a random position.
	 * 
	 * Find the letter that was added in t.
	 * */
    public char findTheDifference(String s, String t) {
    	char c = t.charAt(t.length()-1);
    	for(int i=0;i<s.length();i++){
    		c^=s.charAt(i);
    		c^=t.charAt(i);
    	}
    	return c;
    }
    
}
